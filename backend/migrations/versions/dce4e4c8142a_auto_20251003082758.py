"""auto 20251003082758

Revision ID: dce4e4c8142a
Revises: 
Create Date: 2025-10-03 08:28:02.204127

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dce4e4c8142a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('anchors',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('root', sa.LargeBinary(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('period_id', name='uq_anchors_period')
    )
    op.create_table('meta_tx_requests',
    sa.Column('request_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('tx_hash', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('gas_used', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('request_id')
    )
    op.create_index('ix_mtx_status_created', 'meta_tx_requests', ['status', 'created_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('eth_address', sa.String(length=42), nullable=False),
    sa.Column('rsa_public', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_eth_address'), 'users', ['eth_address'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('mime', sa.String(), nullable=True),
    sa.Column('cid', sa.String(), nullable=False),
    sa.Column('checksum', sa.LargeBinary(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('checksum', 'owner_id', name='uq_files_checksum_owner')
    )
    op.create_index('ix_files_owner', 'files', ['owner_id'], unique=False)
    op.create_index(op.f('ix_files_owner_id'), 'files', ['owner_id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('payload_hash', sa.LargeBinary(length=32), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_file_id'), 'events', ['file_id'], unique=False)
    op.create_index('ix_events_period', 'events', ['period_id'], unique=False)
    op.create_index('ix_events_ts', 'events', ['ts'], unique=False)
    op.create_index(op.f('ix_events_user_id'), 'events', ['user_id'], unique=False)
    op.create_table('file_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('cid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_id', 'version', name='uq_file_versions_file_version')
    )
    op.create_index('ix_file_versions_file', 'file_versions', ['file_id'], unique=False)
    op.create_table('grants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('grantee_id', sa.UUID(), nullable=False),
    sa.Column('ttl_days', sa.Integer(), nullable=True),
    sa.Column('max_dl', sa.Integer(), nullable=True),
    sa.Column('used', sa.Integer(), server_default='0', nullable=False),
    sa.Column('enc_k', sa.String(), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['grantee_id'], ['users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_grants_file', 'grants', ['file_id'], unique=False)
    op.create_index(op.f('ix_grants_file_id'), 'grants', ['file_id'], unique=False)
    op.create_index('ix_grants_grantee', 'grants', ['grantee_id'], unique=False)
    op.create_index(op.f('ix_grants_grantee_id'), 'grants', ['grantee_id'], unique=False)
    op.create_index(op.f('ix_grants_owner_id'), 'grants', ['owner_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_grants_owner_id'), table_name='grants')
    op.drop_index(op.f('ix_grants_grantee_id'), table_name='grants')
    op.drop_index('ix_grants_grantee', table_name='grants')
    op.drop_index(op.f('ix_grants_file_id'), table_name='grants')
    op.drop_index('ix_grants_file', table_name='grants')
    op.drop_table('grants')
    op.drop_index('ix_file_versions_file', table_name='file_versions')
    op.drop_table('file_versions')
    op.drop_index(op.f('ix_events_user_id'), table_name='events')
    op.drop_index('ix_events_ts', table_name='events')
    op.drop_index('ix_events_period', table_name='events')
    op.drop_index(op.f('ix_events_file_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_files_owner_id'), table_name='files')
    op.drop_index('ix_files_owner', table_name='files')
    op.drop_table('files')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_eth_address'), table_name='users')
    op.drop_table('users')
    op.drop_index('ix_mtx_status_created', table_name='meta_tx_requests')
    op.drop_table('meta_tx_requests')
    op.drop_table('anchors')
    # ### end Alembic commands ###
